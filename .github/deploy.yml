# .github/workflows/deploy.yml
name: Deploy to AWS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-west-2
  FRONTEND_ECR_REPOSITORY: pdf-gpt-frontend
  BACKEND_ECR_REPOSITORY: pdf-gpt-backend
  ECS_CLUSTER: pdf-gpt-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Frontend image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$FRONTEND_ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.frontend .
        docker push $ECR_REGISTRY/$FRONTEND_ECR_REPOSITORY:$IMAGE_TAG

    - name: Build and push Backend image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.backend .
        docker push $ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG

    - name: Update ECS services
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER --service pdf-gpt-frontend --force-new-deployment
        aws ecs update-service --cluster $ECS_CLUSTER --service pdf-gpt-backend --force-new-deployment